name: Manual Scraper - Sofascore

on:
  workflow_dispatch: # Allows manual triggering

jobs:
  run-tasks:
#    runs-on: ubuntu-latest
    runs-on: ubuntu-22.04
#    timeout-minutes: 360  # Set the job timeout to 6 hours (360 minutes)
    timeout-minutes: 200  # Set the job timeout 200 minutes
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        league:
          - laliga
          - premier
          - seriea
          - bundesliga
          - ligueone
          - champions
          - europaleague
          - conference
      #   - mundialito
      #   - mundial
      #   - eurocopa
      #   - copaamerica

#    steps:
#      - name: Enable Debug Logging
#        run: |
#          echo "ACTIONS_RUNNER_DEBUG=true" >> $GITHUB_ENV
#          echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          persist-credentials: false # Ensure the checkout action doesn't persist credentials
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#
#      - name: Run tasks
#        run: |
#          python -u ./scraping_tasks/scrape_sofascore.py
#
#      - name: Configure git
#        run: |
#          git config --global user.name 'github-actions[bot]'
#          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
#
#      - name: Update auto-update trigger in streamlit_app.py
#        run: |
#          TRIGGER_LINE="# Auto-update trigger: $(date)"
#          if grep -q "^# Auto-update trigger:" streamlit_app.py; then
#            sed -i "s/^# Auto-update trigger:.*/$TRIGGER_LINE/" streamlit_app.py
#          else
#            echo "$TRIGGER_LINE" >> streamlit_app.py
#          fi
#
#      - name: Commit changes
#        run: |
#          git add streamlit_app.py
#          git add csv_files/*.csv
#          git add json_files/*.json
#          git commit -m "Automated commit by GitHub Action"
#
#      - name: Push changes
#        uses: ad-m/github-push-action@v0.6.0
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Enable Debug Logging
        run: |
          echo "ACTIONS_RUNNER_DEBUG=true" >> $GITHUB_ENV
          echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tasks (${{ matrix.league }})
        run: |
          python -u ./scraping_tasks/sofascore_scrapers/scrape_sofascore_${{ matrix.league }}.py

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Update auto-update trigger in streamlit_app.py
        run: |
          TRIGGER_LINE="# Auto-update trigger: $(date)"
          if grep -q "^# Auto-update trigger:" streamlit_app.py; then
            sed -i "s/^# Auto-update trigger:.*/$TRIGGER_LINE/" streamlit_app.py
          else
            echo "$TRIGGER_LINE" >> streamlit_app.py
          fi

      - name: Commit changes
        run: |
          git add streamlit_app.py
          git add csv_files/*.csv
          git add json_files/*.json
          git commit -m "Automated commit by GitHub Action"

      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
